<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" x="10" y="5" width="298" height="154" backgroundColor="#313131"
	creationComplete="init()">


<mx:Script>
        <![CDATA[
        	import com.pomodairo.PomodoroEventDispatcher;
        	import com.pomodairo.db.Storage;
        	import com.pomodairo.events.ConfigurationUpdatedEvent;

        	public static var FADE_TICKING_SOUND:String = "sound.fadeTicking";
			public static var ALARM_SOUND_FILE:String = "sound.alarmSound";
			public static var CLOCK_SOUND_FILE:String = "sound.clockSound";
        	
        	private var soundEnabled:Boolean = new Boolean(true);
        	private var volume:Number = new Number(100);
        	
        	private var fadeTicking:Boolean = new Boolean(true);
			
			private var alarmSound:String = "";
			private var clockSound:String = "";
        	
			var soundTypes:FileFilter = new FileFilter("Audio Files (*.mp3)", "*.mp3");
			var fileTypes:Array = new Array(soundTypes);
			private var alarmSoundFile:File = new File();
			private var clockSoundFile:File = new File();
			
        	private function init():void
        	{
        		populate();
        		applyGuiValues();	
        	}
        	
        	public function populate():void
        	{
        		var props:Dictionary = Storage.instance.config;
        		if (props["volume"] != null) 
        		{
        			volume = props["volume"];
        		}
        		
        		if (props["sound"] != null) 
        		{
        			soundEnabled = props["sound"] == "true";
        		}
        		
        		if (props[FADE_TICKING_SOUND] != null) 
        		{
        			fadeTicking = props[FADE_TICKING_SOUND] == "true";
        		}
				
				if (props[ALARM_SOUND_FILE] != null) 
				{
					alarmSound = props[ALARM_SOUND_FILE];
				}
				
				if (props[CLOCK_SOUND_FILE] != null) 
				{
					clockSound = props[CLOCK_SOUND_FILE];
				}
        		
        	}
        	
        	private function applyGuiValues():void
            {
        		volumeSlider.value = volume;
        		soundCheckbox.selected = soundEnabled;
        		fadeTickingCheckbox.selected = fadeTicking;
				alarmFileLocationInput.text = alarmSound;
				clockFileLocationInput.text = clockSound;
            }
        	
            private function exit():void
            {
            	this.parent.removeChild(this);
            }
            
            public function save():void
            {
            	volume = volumeSlider.value;
            	soundEnabled = soundCheckbox.selected;
            	fadeTicking = fadeTickingCheckbox.selected;
				alarmSound = alarmFileLocationInput.text;
				clockSound = clockFileLocationInput.text;
            	
            	Storage.instance.setConfigurationValue("volume", ""+volume);
            	Storage.instance.setConfigurationValue("sound", ""+soundEnabled);
            	Storage.instance.setConfigurationValue(FADE_TICKING_SOUND, ""+fadeTicking);
				Storage.instance.setConfigurationValue(ALARM_SOUND_FILE, ""+alarmSound);
				Storage.instance.setConfigurationValue(CLOCK_SOUND_FILE, ""+clockSound);
            	exit();
            	
            	notifyConfiguration();
            }
            
            public function notifyConfiguration():void
            {
            	// Notify the world 
            	PomodoroEventDispatcher.getInstance().dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, "volume", ""+volume));
            	PomodoroEventDispatcher.getInstance().dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, "sound", ""+soundEnabled));
            	PomodoroEventDispatcher.getInstance().dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, FADE_TICKING_SOUND, ""+fadeTicking));
				PomodoroEventDispatcher.getInstance().dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ALARM_SOUND_FILE, ""+alarmSound));
				PomodoroEventDispatcher.getInstance().dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, CLOCK_SOUND_FILE, ""+clockSound));
            }
			
			private function selectAlarmFile():void {
				alarmSoundFile.addEventListener(Event.SELECT, setAlarmFilePath);
				alarmSoundFile.browse(fileTypes);
			}
			
			private function setAlarmFilePath(event:Event):void {
				alarmFileLocationInput.text = alarmSoundFile.nativePath;
				alarmSound = alarmSoundFile.nativePath;
			}      
			
			private function selectClockFile():void {
				clockSoundFile.addEventListener(Event.SELECT, setClockFilePath);
				clockSoundFile.browse(fileTypes);
			}
			
			private function setClockFilePath(event:Event):void {
				clockFileLocationInput.text = clockSoundFile.nativePath;
				clockSound = clockSoundFile.nativePath;
			}      
			            
        ]]>
    </mx:Script>

	<mx:CheckBox id="soundCheckbox" x="178.8" y="15.3" label="Sound enabled"/>
	<mx:CheckBox id="fadeTickingCheckbox" x="178.8" y="45.3" label="Fade ticking"/>
	<mx:Button x="221" y="90" label="Save" click="save()" width="63"/>
	<mx:Button x="221" y="121" label="Cancel" click="exit()"/>
	<mx:HSlider id="volumeSlider" x="10" y="12" minimum="0" maximum="100" snapInterval="5"/>
	<mx:Label x="10" y="4" text="Volume" color="#A9A9A9"/>
	
	<mx:Label x="10" y="58.7" color="#A9A9A9" text="Alarm Sound:"/>
	<mx:TextInput id="alarmFileLocationInput" x="10" y="76" width="131">
		<mx:toolTip>Custom sound file for the alarm. Leave empty for default.</mx:toolTip>
	</mx:TextInput>
	<mx:Button x="149" y="76" label="Browse" click="selectAlarmFile()" width="64"/>
	
	<mx:Label x="10" y="106" color="#A9A9A9" text="Clock Sound:"/>
	<mx:TextInput id="clockFileLocationInput" x="10" y="122" width="131">
		<mx:toolTip>Custom sound file for the clock sound. Leave empty for default.</mx:toolTip>
	</mx:TextInput>
	<mx:Button x="149" y="122" label="Browse" click="selectClockFile()" width="64"/>
	
</mx:Canvas>
